import numpy as np

system='capitalBS'
# system='Bixi'
# system='citibike'
#data_path = 'D:/maitrise/data/'
data_path = 'C:/Users/Clara Martins/Documents/Doutorado/Data/'
img_path = 'D:/phulo/polymtl/maitrise_recherche/img'
# synthetic_data_path = 'D:/maitrise/synthetic_data/'
root_path = 'C:/Users/Clara Martins/Documents/Doutorado/Pierre_Code/code'
if system == 'capitalBS' or system=='Bixi':
    station_prefix = 'date'
    arr_prefix = 'End ' + station_prefix
    dep_prefix = 'Start ' + station_prefix
    start_station_code = 'Start station'
    end_station_code = 'End station'
elif system == 'citibike':
    station_prefix = 'time'
    dep_prefix = 'start' + station_prefix
    arr_prefix = 'stop' + station_prefix
    start_station_code = 'start station id'
    end_station_code = 'end station id'

learning_var = [
    'Mois',
    'Heure',
    'total',
    'temp',
    'Jour',
    'Annee',
    'vent',
    'precip',
    'wday',
    'LV',
    'MMJ',
    'SD',
    'visi',
    'averses',
    'pression',
    # 'fort',
    'ferie',
    # 'vac',
    # 'nuageux',
    # 'brr',
    'Hum',
    # 'neige',
    'pluie',
    # 'verglas',
    'bruine',
    # 'poudrerie',
    'brouillard',
    # 'orage',
    'h0',
    'h1',
    'h2',
    'h3',
    'h4',
    'h5',
    'h6',
    'h7',
    'h8',
    'h9',
    'h10',
    'h11',
    'h12',
    'h13',
    'h14',
    'h15',
    'h16',
    'h17',
    'h18',
    'h19',
    'h20',
    'h21',
    'h22',
    'h23'
]
translate_var={
    'Mois':'Month',
    'Heure':'Hour',
    'total':'total',
    'temp':'Temperature',
    'Jour':'Day',
    'annee':'Year',
    'vent':'Wind',
    'precip':'precip',
    'wday':'Week day',
    'LV':'MonFri',
    'MMJ':'TueWedThur',
    'SD':'SatSun',
    'visi':'Visibility',
    'averses':'Showers',
    'pression':'Pressure',
    'fort':'Heavy',
    'ferie':'National Day',
    'vac':'Holidays',
    'nuageux':'Cloudy',
    'brr':'brr',
    'Hum':'Humidity',
    'neige':'snow',
    'pluie':'Rain',
    'verglas':'Ice',
    'bruine':'Drizzle',
    'poudrerie':'',
    'brouillard':'Fog',
    'orage':'Storm',
    'h0':'h0',
    'h1':'h1',
    'h2':'h2',
    'h3':'h3',
    'h4':'h4',
    'h5':'h5',
    'h6':'h6',
    'h7':'h7',
    'h8':'h8',
    'h9':'h9',
    'h10':'h10',
    'h11':'h11',
    'h12':'h12',
    'h13':'h13',
    'h14':'h14',
    'h15':'h15',
    'h16':'h16',
    'h17':'h17',
    'h18':'h18',
    'h19':'h19',
    'h20':'h20',
    'h21':'h21',
    'h22':'h22',
    'h23':'h23'
}
available_learning_var = [
    'Mois',
    'Heure',
    'temp',
    'pression',
    'Hum',
    'precip',
    'pluie',
    'neige',
    'averses',
    'fort',
    'orage',
    'ferie',
    'visi',
    'brr',
    'bruine',
    'brouillard',
    'vent',
    'Jour',
    'annee',
    'wday',
    'vac',
    'total',
    'LV',
    'MMJ',
    'SD',
    'nuageux',
    'verglas',
    'poudrerie',
    'h0',
    'h1',
    'h2',
    'h3',
    'h4',
    'h5',
    'h6',
    'h7',
    'h8',
    'h9',
    'h10',
    'h11',
    'h12',
    'h13',
    'h14',
    'h15',
    'h16',
    'h17',
    'h18',
    'h19',
    'h20',
    'h21',
    'h22',
    'h23'
]
learning_var_variance = [
    # 'Mois',
    'Heure',
    'temp',
    # 'Jour',
    # 'Annee',
    # 'vent',
    # 'precip',
    'wday',
    # 'LV',
    # 'MMJ',
    # 'SD',
    # 'visi',
    # 'averses',
    'pression',
    # 'fort',
    # 'ferie',
    # 'vac',
    # 'nuageux',
    # 'brr',
    'Hum',
    # 'neige',
    # 'pluie',
    # 'verglas',
    # 'bruine',
    # 'poudrerie',
    # 'brouillard',
    # 'orage',
    # 'h0',
    # 'h1',
    # 'h2',
    # 'h3',
    # 'h4',
    # 'h5',
    # 'h6',
    # 'h7',
    # 'h8',
    # 'h9',
    # 'h10',
    # 'h11',
    # 'h12',
    # 'h13',
    # 'h14',
    # 'h15',
    # 'h16',
    # 'h17',
    # 'h18',
    # 'h19',
    # 'h20',
    # 'h21',
    # 'h22',
    # 'h23'
]
champ_analyse = [
    'Mois',
    'temp',
    # 'Jour',
    # 'Annee',
    # 'vent',
    # 'precip',
    'wday',
    # 'LV',
    # 'MMJ',
    # 'SD',
    'visi',
    'averses',
    # 'pression',
    'fort',
    'ferie',
    # 'vac',
    # 'nuageux',
    # 'brr',
    # 'Hum',
    'neige',
    'pluie',
    # 'verglas',
    'bruine',
    # 'poudrerie',
    'brouillard',
    'orage'
]
default_val = {
    'Mois': 0,
    'Heure': 0,
    'temp': 20,
    'Jour': 0,
    'Annee': 2016,
    'vent': 0,
    'precip': 0,
    'wday': 0,
    'LV': 0,
    'MMJ': 0,
    'SD': 0,
    'visi': 20,
    'averses': 0,
    'pression': 100,
    'fort': 0,
    'ferie': 0,
    'vac': 0,
    'nuageux': 0,
    'brr': 0,
    'End date': 0,
    'Start date': 0,
    'UTC timestamp': 0,
    'Hum': 80,
    'neige': 0,
    'pluie': 0,
    'verglas': 0,
    'bruine': 0,
    'poudrerie': 0,
    'brouillard': 0,
    'orage': 0,
    'h0': 0,
    'h1': 0,
    'h2': 0,
    'h3': 0,
    'h4': 0,
    'h5': 0,
    'h6': 0,
    'h7': 0,
    'h8': 0,
    'h9': 0,
    'h10': 0,
    'h11': 0,
    'h12': 0,
    'h13': 0,
    'h14': 0,
    'h15': 0,
    'h16': 0,
    'h17': 0,
    'h18': 0,
    'h19': 0,
    'h20': 0,
    'h21': 0,
    'h22': 0,
    'h23': 0
}
norm_factor = {
    'Mois': 12,
    'Heure': 24,
    'temp': 50,
    'Jour': 31,
    'Annee': 1,
    'vent': 50,
    'precip': 1,
    'wday': 7,
    'LV': 1,
    'MMJ': 1,
    'SD': 1,
    'visi': 30,
    'averses': 1,
    'pression': 20,
    'fort': 1,
    'ferie': 1,
    'vac': 1,
    'nuageux': 1,
    'brr': 1,
    'End date': 4000,
    'Start date': 4000,
    'UTC timestamp': 1,
    'Hum': 100,
    'neige': 1,
    'pluie': 1,
    'verglas': 1,
    'bruine': 1,
    'poudrerie': 1,
    'brouillard': 1,
    'orage': 1,
    'h0': 1,
    'h1': 1,
    'h2': 1,
    'h3': 1,
    'h4': 1,
    'h5': 1,
    'h6': 1,
    'h7': 1,
    'h8': 1,
    'h9': 1,
    'h10': 1,
    'h11': 1,
    'h12': 1,
    'h13': 1,
    'h14': 1,
    'h15': 1,
    'h16': 1,
    'h17': 1,
    'h18': 1,
    'h19': 1,
    'h20': 1,
    'h21': 1,
    'h22': 1,
    'h23': 1
}
minl = {
    'End date': 0,
    'Start date': 0,
    'UTC timestamp': 0,
    'wday': 0,
    'LV': 0,
    'MMJ': 0,
    'SD': 0,
    'ferie': 0,
    'vac': 0,
    'Annee': 2015,
    'Mois': 0,
    'Jour': 0,
    'Heure': 0,
    'temp': -10,
    'Hum': 0,
    'vent': 0,
    'visi': 0,
    'pression': 90,
    'averses': 0,
    'neige': 0,
    'pluie': 0,
    'fort': 0,
    'verglas': 0,
    'bruine': 0,
    'poudrerie': 0,
    'brouillard': 0,
    'nuageux': 0,
    'orage': 0,
    'precip': 0,
    'brr': 0,
    'h0': 0,
    'h1': 0,
    'h2': 0,
    'h3': 0,
    'h4': 0,
    'h5': 0,
    'h6': 0,
    'h7': 0,
    'h8': 0,
    'h9': 0,
    'h10': 0,
    'h11': 0,
    'h12': 0,
    'h13': 0,
    'h14': 0,
    'h15': 0,
    'h16': 0,
    'h17': 0,
    'h18': 0,
    'h19': 0,
    'h20': 0,
    'h21': 0,
    'h22': 0,
    'h23': 0
}


def get_decor_var(n):
    # d = env.load(env.station_decor_path)
    return ['f_decor' +str(i) for i in range(n)]


def gen_x(ch_val=[]):
    l = np.zeros((24, len(learning_var)))
    # norm = np.zeros((len(learning_var)))
    # mini = np.zeros((len(learning_var)))
    # for i in range(len(learning_var)):
    # norm[i] = norm_factor[learning_var[i]]
    # mini[i] = minl[learning_var[i]]
    for h in range(24):
        for i in range(len(learning_var)):
            l[h, i] = default_val[learning_var[i]]
        l[h, learning_var.index('Heure')] = h
        if 'h0' in learning_var:
            l[h, learning_var.index('h' + str(h))] = 1
        for champ, valeur in ch_val:
            l[h, learning_var.index(champ)] = valeur
        if 'precip' in learning_var:
            l[h, learning_var.index('precip')] = max(l[h, learning_var.index('precip')],
                                                     l[h, learning_var.index('averses')],
                                                     l[h, learning_var.index('fort')])
        if 'LV' in learning_var:
            l[h, learning_var.index('LV')] = int(
                (l[h, learning_var.index('wday')] == 0) or (l[h, learning_var.index('wday')] == 4))
            l[h, learning_var.index('MMJ')] = int(
                (l[h, learning_var.index('wday')] == 1) or (l[h, learning_var.index('wday')] == 2) or (
                l[h, learning_var.index('wday')] == 3))
            l[h, learning_var.index('SD')] = int(
                (l[h, learning_var.index('wday')] == 5) or (l[h, learning_var.index('wday')] == 6))
            # l[h] = (l[h] - mini) / norm
    return l
